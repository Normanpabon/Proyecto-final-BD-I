mysql> CREATE DATABASE BD_SQLFINAL;

Query OK, 1 row affected (0.00 sec)


// falta colocar llaves foraneas, se crea tabla persona

mysql> CREATE TABLE BD_SQLFINAL.persona ( numero_identificacion INT NOT NULL, tipo varchar(15) NOT NULL,
    nombre_completo varchar(30) NOT NULL, numero_contrato_empleo INT NULL, registro_conduccion varchar(15) NULL,
    direccion varchar(50) NOT NULL, telefono varchar(12) NOT NULL, telefono_secundario varchar(12) NULL,
    PRIMARY KEY (numero_identificacion));

Query OK, 0 rows affected (0.01 sec)

// Se crea la bodega, falta llave foranea x2

mysql> CREATE TABLE BD_SQLFINAL.bodega ( nit varchar(11) NOT NULL,
ubicacion varchar(50) NOT NULL, propietario varchar(30) NOT NULL,
largo int NOT NULL, ancho int NOT NULL,
alto int NULL, tipo_ambiente CHAR NOT NULL,
tipo_producto VARCHAR(15) NOT NULL,
material_construccion varchar(15) NOT NULL,
puertas_entrada int NULL, puertas_salida int NULL,
cantidad_puestos int NULL, PRIMARY KEY (nit));
Query OK, 0 rows affected (0.01 sec)

// Se crea el puesto de almacenamiento (sin llave foranea x3)

mysql> CREATE TABLE BD_SQLFINAL.puesto_almacenamiento ( codigo int NOT NULL, localizacion_cuadrante varchar(15) NOT NULL,
consecutivo varchar(32) NOT NULL, contiene int NULL, bodega_nit varchar(11) NOT NULL,
tipo_local char NOT NULL, PRIMARY KEY (codigo));

Query OK, 0 rows affected (0.01 sec)

// Se crea la entidad vehiculo (sin llave foranea x4)

mysql> CREATE TABLE BD_SQLFINAL.vehiculo ( placa varchar(6) NOT NULL, tipo varchar(10) NOT NULL, color varchar(10) NOT NULL,
    modelo YEAR(4) NOT NULL, marca varchar(12) NULL, volumen double NULL, capacidad double NULL, numero_contrato int NOT NULL,
    identificacion_conductor int NOT NULL, PRIMARY KEY ( placa ));
Query OK, 0 rows affected (0.08 sec)


// Se crea la entidad producto (sin llave foranea x5)

mysql> CREATE TABLE BD_SQLFINAL.producto ( codigo integer NOT NULL, tipo char NOT NULL, valor_asegurado double NOT NULL, descripcion varchar(140) NOT NULL,
    estado_poliza char NOT NULL, codigo_mercancia int NULL, codigo_contenedor int NULL, codigo_maquinaria int NULL, vehiculo_placa varchar(6) NOT NULL,
    PRIMARY KEY ( codigo) ) ;
Query OK, 0 rows affected (0.01 sec)


// Se crea la entidad referencia comercial(sin llaves foraneas x6)

mysql> CREATE TABLE BD_SQLFINAL.referencia_comercial ( tipo_identificacion varchar(15) NOT NULL, identificacion int NOT NULL, nombre_completo varchar(30) NOT NULL,
    razon_social varchar(50) NOT NULL, direccion varchar(50) NOT NULL, telefono_oficina int NOT NULL, PRIMARY KEY ( identificacion ));
Query OK, 0 rows affected (0.01 sec)

// Se crea la entidad contrato(sin llaves foraneas x6)

mysql> CREATE TABLE BD_SQLFINAL.contrato ( numero_contrato int NOT NULL, poliza_amparo int NOT NULL, local_asignado varchar(15) NOT NULL,
   numero_contrato_propietario int NULL, numero_contrato_membresia int NULL, numero_contrato_temporal int NULL, codigo_puesto_almacenamiento int NOT NULL, 
   contratante int NOT NULL, referencia_personal_1 int NULL, referencia_personal_2 int NULL, referencia_comercio int NULL, PRIMARY KEY (numero_contrato));


// Se crea la entidad temmporal(sin llaves foraneas x6)

CREATE TABLE BD_SQLFINAL.temporal ( numero_contrato int NOT NULL, fecha_inicio date NOT NULL, fecha_finalizacion date NOT NULL, frecuencia_pago char NOT NULL,
    poliza_amparo int NOT NULL, local_asignado varchar(15) NOT NULL, PRIMARY KEY (numero_contrato));


// Se crea la entidad membresia(sin llaves foraneas x6)

mysql> CREATE TABLE BD_SQLFINAL.membresia ( numero_contrato int NOT NULL, seguro_mecanica char NOT NULL, fecha_finalizacion date NOT NULL,
     frecuencia_pago char NOT NULL, fecha_poliza date NOT NULL, fecha_terminacion_poliza date NOT NULL, PRIMARY KEY ( numero_contrato));
Query OK, 0 rows affected (0.01 sec)

// Se crea la entidad mercancia (sin llaves foraneas x6)

mysql> CREATE TABLE BD_SQLFINAL.mercancia ( codigo int NOT NULL, fragilidad double NOT NULL, peso double NOT NULL, volumen double NOT NULL,
    fecha_vencimiento date NULL, fecha_empaque date NOT NULL, valor_nominal double NOT NULL, empacador int NOT NULL, PRIMARY KEY (codigo));
Query OK, 0 rows affected (0.01 sec)

// Se crea la entidad contenedor (sin llaves foraneas x6)

mysql> CREATE TABLE BD_SQLFINAL.contenedor ( codigo int NOT NULL, tipo_contenedor char NOT NULL, largo double NOT NULL, ancho double NOT NULL,
     alto double NOT NULL, capacidad_carga double NOT NULL, empresa_responsable varchar(30) NOT NULL, poliza_manejo varchar(15) NOT NULL,
     PRIMARY KEY (codigo));
Query OK, 0 rows affected (0.02 sec)

// Se crea la entidad maquinaria (sin llaves foraneas x6)

mysql> CREATE TABLE BD_SQLFINAL.maquinaria ( codigo int NOT NULL, marca varchar(15) NOT NULL, peso double NOT NULL, modelo YEAR(4) NOT NULL, valor_nominal double NOT NULL,
    PRIMARY KEY (codigo));
Query OK, 0 rows affected (0.01 sec)

// Se crea entidad registro (sin llaves foraneas)

mysql> CREATE TABLE BD_SQLFINAL.registro ( numero_registro int NOT NULL AUTO_INCREMENT, licencia_conductor varchar(15), cedula_conductor int NOT NULL,
     placa_vehiculo varchar(6) NOT NULL, marca_vehiculo varchar(12) NULL, vol_carga double NULL, capacidad_carga double NULL, tipo_vehiculo varchar(10) NOT NULL,
     local_ingreso varchar(15) NOT NULL, tipo_usuario varchar(10) NOT NULL, retiro_mercancia char NULL, tiempo_entrada date NOT NULL, tiempo_salida date NULL,
    codigo_producto int NULL, PRIMARY KEY ( numero_registro));
Query OK, 0 rows affected (0.01 sec)

// se crea la entidad PROPIETARIO

CREATE TABLE BD_SQLFINAL.propietario ( numero_contrato int NOT NULL, 
tipo_persona varchar(9) NOT NULL, tipo_uso varchar(25) NOT NULL, PRIMARY KEY (numero_contrato));


// se empiezan a crear las dependencias de llaves foraneas y requisitos

// llave foranea opcional y restriccion PK en clase persona

msql> ALTER TABLE BD_SQLFINAL.persona ADD CONSTRAINT UNIQUE(numero_identificacion); ALTER TABLE BD_SQLFINAL.persona ADD CONSTRAINT relacion_contractual FOREIGN KEY ( numero_contrato_empleo) REFERENCES contrato(numero_contrato);


// se coloca la limitante de una placa unica para vehiculos registrados Llave foranea vehiculo para numero contrato e identificacion conductor

ALTER TABLE BD_SQLFINAL.vehiculo ADD CONSTRAINT UNIQUE(placa); 
ALTER TABLE BD_SQLFINAL.vehiculo ADD CONSTRAINT referencia_contractual FOREIGN KEY (numero_contrato) REFERENCES contrato(numero_contrato);
ALTER TABLE BD_SQLFINAL.vehiculo ADD CONSTRAINT referencia_conductor FOREIGN KEY (identificacion_conductor) REFERENCES persona(numero_identificacion);


// codigo unico y llaves foraneas puesto_almacenamiento 

ALTER TABLE BD_SQLFINAL.puesto_almacenamiento ADD CONSTRAINT UNIQUE(codigo);

ALTER TABLE BD_SQLFINAL.puesto_almacenamiento ADD CONSTRAINT puesto_recursivo FOREIGN KEY 
(contiene) REFERENCES puesto_almacenamiento(codigo);

ALTER TABLE BD_SQLFINAL.puesto_almacenamiento ADD CONSTRAINT numero_nit FOREIGN KEY (bodega_nit) 
REFERENCES bodega(nit);


// numero_contrato unico y llaves para tipos de contrato y puesto almacenamiento

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT UNIQUE(numero_contrato);

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT contra_propietario FOREIGN KEY ( numero_contrato_propietario ) 
REFERENCES propietario( numero_contrato);

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT contra_membresia FOREIGN KEY ( numero_contrato_membresia ) 
REFERENCES membresia( numero_contrato);

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT contra_temporal FOREIGN KEY ( numero_contrato_temporal) 
REFERENCES temporal( numero_contrato);

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT cod_puesto FOREIGN KEY ( codigo_puesto_almacenamiento)
REFERENCES puesto_almacenamiento( codigo);

// numero_contrato unico temporal

ALTER TABLE BD_SQLFINAL.temporal ADD CONSTRAINT UNIQUE(numero_contrato);

// numero_contrato unico membresia

ALTER TABLE BD_SQLFINAL.membresia ADD CONSTRAINT UNIQUE(numero_contrato);

// numero_contrato unico propietario

ALTER TABLE BD_SQLFINAL.propietario ADD CONSTRAINT UNIQUE(numero_contrato);

msql> SHOW ENGINE INNODB STATUS;
// producto codigo unico y llaves foraneas

ALTER TABLE BD_SQLFINAL.producto ADD CONSTRAINT UNIQUE(codigo);

ALTER TABLE BD_SQLFINAL.producto ADD CONSTRAINT cod_mercancia FOREIGN KEY (codigo_mercancia)
REFERENCES mercancia( codigo);

ALTER TABLE BD_SQLFINAL.producto ADD CONSTRAINT cod_contenedor FOREIGN KEY (codigo_contenedor)
REFERENCES contenedor( codigo);

ALTER TABLE BD_SQLFINAL.producto ADD CONSTRAINT cod_maquinaria FOREIGN KEY (codigo_maquinaria)
REFERENCES maquinaria( codigo);


// registro numero unico y llaves foraneas

 // revisar
ALTER TABLE BD_SQLFINAL.registro ADD CONSTRAINT ced_cond FOREIGN KEY (cedula_conductor)
REFERENCES BD_SQLFINAL.persona(numero_identificacion); 




ALTER TABLE BD_SQLFINAL.registro ADD CONSTRAINT placa_veh FOREIGN KEY (placa_vehiculo)
REFERENCES vehiculo(placa);

// se agregan contraints a contrato

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT
id_contratante FOREIGN KEY (contratante)
 REFERENCES persona(numero_identificacion); 

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT
id_referencia_personal_1 FOREIGN KEY (referencia_personal_1)
 REFERENCES persona(numero_identificacion); 

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT
id_referencia_personal_2 FOREIGN KEY (referencia_personal_2)
 REFERENCES persona(numero_identificacion); 

ALTER TABLE BD_SQLFINAL.contrato ADD CONSTRAINT
id_referencia_comercio FOREIGN KEY (referencia_comercio)
 REFERENCES referencia_comercial(identificacion); 